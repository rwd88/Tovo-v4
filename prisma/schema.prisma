generator client {
  provider = "prisma-client-js"
}

datasource db {
provider = "postgresql"        // ‚Üê hard-code your actual provider here
url      = env("DATABASE_URL")
}

model User {
  id         String   @id
  telegramId String   @unique
  username   String?
  balance    Float    @default(0)
  createdAt  DateTime @default(now())
  solanaWallet  String?  // newly linked
  bscWallet     String?  // newly linked
  trades     Trade[] // renamed back-relation
}

model Market {
  id           String   @id @default(cuid())
  externalId   String?  @unique(map: "Market_externalId_key")
  question     String
  description  String?
  eventTime    DateTime @default(now())
  forecast     Float?
  outcome      String?
  poolYes      Float    @default(0)
  poolNo       Float    @default(0)
  status       String   @default("open")
  feeCollected Float    @default(0)
  trades       Trade[]
  createdAt    DateTime @default(now())
}

model Trade {
  id        String   @id @default(cuid())
  market    Market   @relation(fields: [marketId], references: [id])
  marketId  String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  type      String // 'yes' or 'no'
  amount    Float
  fee       Float
  payout    Float
  shares    Float
  settled   Boolean  @default(false)
  createdAt DateTime @default(now())

  @@index([marketId])
  @@index([userId])
}
model Deposit {
  id        String   @id @default(cuid())
  network   String
  txHash    String   @unique
  status    String   @default("pending")  // pending/approved/rejected
  createdAt DateTime @default(now())
  // optional: link to User
  // user      User?    @relation(fields: [userId], references: [id])
  // userId    String?
}
model Withdrawal {
  id         String   @id @default(cuid())
  userId     String
  chain      String
  amount     Float
  nonce      String   @unique
  expiresAt  DateTime
  status     String   // pending | signed | completed | cancelled
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([userId])
}
