(()=>{var a={};a.id=636,a.ids=[636],a.modules={656:a=>{"use strict";a.exports=import("wagmi/chains")},977:a=>{"use strict";a.exports=import("wagmi")},2015:a=>{"use strict";a.exports=require("react")},2386:(a,b,c)=>{"use strict";c.a(a,async(a,d)=>{try{c.r(b),c.d(b,{default:()=>r});var e=c(8732);c(2768);var f=c(3852);c(7581);var g=c(2015),h=c(977),i=c(5920),j=c(8462),k=c(6574),l=c(6234),m=c(4279),n=c(3755);c(9324);var o=c(7552),p=c(9340),q=a([h,i,j,k,l,m,n,o,p]);[h,i,j,k,l,m,n,o,p]=q.then?(await q)():q;let s=new j.QueryClient({defaultOptions:{queries:{refetchOnWindowFocus:!1,retry:1}}});function r({Component:a,pageProps:b}){let c=l.WalletAdapterNetwork.Mainnet,d=(0,g.useMemo)(()=>[new m.PhantomWalletAdapter],[c]);return(0,e.jsx)(f.t,{children:(0,e.jsx)(o.TonConnectUIProvider,{manifestUrl:"https://yourdomain.com/tonconnect-manifest.json",walletsListConfiguration:{includeWallets:[{appName:"tovo-v4",name:"TON Wallet",imageUrl:"https://wallet.ton.org/assets/tonconnect_logo.png",aboutUrl:"https://ton.org/wallets",jsBridgeKey:"tonconnect",bridgeUrl:"https://bridge.tonapi.io/bridge",platforms:["ios","android","chrome","macos","windows"]}]},children:(0,e.jsx)(k.ConnectionProvider,{endpoint:"https://api.mainnet-beta.solana.com",children:(0,e.jsx)(k.WalletProvider,{wallets:d,autoConnect:!0,children:(0,e.jsx)(n.WalletModalProvider,{children:(0,e.jsx)(j.QueryClientProvider,{client:s,children:(0,e.jsx)(h.WagmiProvider,{config:i.G,children:(0,e.jsx)(p.v,{children:(0,e.jsx)(a,{...b})})})})})})})})})}d()}catch(a){d(a)}})},2768:()=>{},3755:a=>{"use strict";a.exports=import("@solana/wallet-adapter-react-ui")},3852:(a,b,c)=>{"use strict";c.d(b,{t:()=>f});var d=c(8732),e=c(2015);class f extends e.Component{static getDerivedStateFromError(a){return{hasError:!0}}componentDidCatch(a,b){console.error("ErrorBoundary caught:",a,b)}render(){return this.state.hasError?this.props.fallback||(0,d.jsx)("div",{className:"error",children:"Something went wrong. Please refresh the page."}):this.props.children}constructor(...a){super(...a),this.state={hasError:!1}}}},4279:a=>{"use strict";a.exports=import("@solana/wallet-adapter-wallets")},5920:(a,b,c)=>{"use strict";c.a(a,async(a,d)=>{try{c.d(b,{G:()=>i});var e=c(977),f=c(656),g=c(9190),h=a([e,f,g]);[e,f,g]=h.then?(await h)():h;let i=(0,e.createConfig)({chains:[f.mainnet],connectors:[(0,g.injected)()],transports:{[f.mainnet.id]:(0,e.http)("https://mainnet.infura.io/v3/YOUR_INFURA_ID")}});d()}catch(a){d(a)}})},6234:a=>{"use strict";a.exports=import("@solana/wallet-adapter-base")},6574:a=>{"use strict";a.exports=import("@solana/wallet-adapter-react")},7552:a=>{"use strict";a.exports=import("@tonconnect/ui-react")},7581:()=>{},8462:a=>{"use strict";a.exports=import("@tanstack/react-query")},8732:a=>{"use strict";a.exports=require("react/jsx-runtime")},9190:a=>{"use strict";a.exports=import("wagmi/connectors")},9324:()=>{},9340:(a,b,c)=>{"use strict";c.a(a,async(a,d)=>{try{c.d(b,{N:()=>j,v:()=>i});var e=c(8732),f=c(977),g=c(2015),h=a([f]);f=(h.then?(await h)():h)[0];let k=(0,g.createContext)(void 0);function i({children:a}){let{address:b,isConnected:c}=(0,f.useAccount)(),{connectAsync:d,connectors:h}=(0,f.useConnect)(),{disconnectAsync:i}=(0,f.useDisconnect)(),[j,l]=(0,g.useState)(!1),m=async()=>{try{let a=h.find(a=>"metaMask"===a.id)||h.find(a=>"walletConnect"===a.id)||h.find(a=>"injected"===a.id);if(!a)throw Error("No supported wallet found.");await d({connector:a})}catch(a){console.error("Connect error:",a)}},n=async()=>{try{await i()}catch(a){console.error("Disconnect error:",a)}};return(0,e.jsx)(k.Provider,{value:{address:j?b??null:null,isConnected:!!j&&c,connect:m,disconnect:n},children:a})}function j(){let a=(0,g.useContext)(k);if(!a)throw Error("useEthereum must be used within EthereumProvider");return a}d()}catch(a){d(a)}})}};var b=require("../webpack-runtime.js");b.C(a);var c=b(b.s=2386);module.exports=c})();