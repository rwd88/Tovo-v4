"use strict";(()=>{var a={};a.id=3619,a.ids=[3619],a.modules={625:(a,b,c)=>{c.a(a,async(a,d)=>{try{c.r(b),c.d(b,{default:()=>j});var e=c(9527),f=c(1853),g=c(2971),h=c(4273),i=a([e,g]);[e,g]=i.then?(await i)():i;let k=g.z.object({marketId:g.z.string().uuid(),walletAddress:g.z.string().regex(/^0x[a-fA-F0-9]{40}$/),amount:g.z.preprocess(a=>"string"==typeof a?parseFloat(a):a,g.z.number().positive()),side:g.z.enum(["UP","DOWN"]),signature:g.z.string()});async function j(a,b){if("POST"!==a.method)return b.status(405).json({success:!1,error:"Method Not Allowed"});try{await h.x.consume(a.socket.remoteAddress)}catch{return b.status(429).json({success:!1,error:"Too many requests"})}let c=k.safeParse(a.body);if(!c.success)return b.status(400).json({success:!1,error:"Invalid input",details:c.error.format()});let{marketId:d,walletAddress:g,amount:i,side:j,signature:l}=c.data,m=await f.z.walletNonce.findUnique({where:{address:g}});if(!m)return b.status(401).json({success:!1,error:"Nonce not found"});if((0,e.verifyMessage)(m.nonce,l).toLowerCase()!==g.toLowerCase())return b.status(401).json({success:!1,error:"Signature verification failed"});await f.z.walletNonce.delete({where:{address:g}});try{let{trade:a,updatedMarket:c}=await f.z.$transaction(async a=>{let b=await a.market.findUnique({where:{id:d}});if(!b||"open"!==b.status)throw Error("Market not open or not found");await a.user.upsert({where:{id:g},create:{id:g,telegramId:g,balance:0},update:{}});let c=await a.user.findUnique({where:{id:g}});if(!c||c.balance<i)throw Error("Insufficient balance");await a.user.update({where:{id:g},data:{balance:{decrement:i}}});let e=parseFloat((.01*i).toFixed(6)),f=parseFloat((i-e).toFixed(6)),h=await a.trade.create({data:{marketId:d,userId:g,type:j,amount:i,fee:e,payout:f,shares:i}}),k=await a.market.update({where:{id:d},data:"UP"===j?{poolYes:{increment:i}}:{poolNo:{increment:i}}});return{trade:h,updatedMarket:k}});return b.status(200).json({success:!0,tradeId:a.id,market:c})}catch(d){console.error("[/api/trade] error:",d);let a=d.message.includes("Insufficient")?"Insufficient balance":d.message.includes("Market not open")?d.message:"Server error",c="Insufficient balance"===a?400:a.startsWith("Market")?404:500;return b.status(c).json({success:!1,error:a})}}d()}catch(a){d(a)}})},1853:(a,b,c)=>{c.d(b,{z:()=>e});var d=c(6330);let e=global.prisma||new d.PrismaClient({log:["warn","error"]});e.$use(async(a,b)=>{let c=Date.now(),d=await b(a),e=Date.now();return console.log(`🔍 prisma: ${a.model}.${a.action} took ${e-c}ms`),d})},2971:a=>{a.exports=import("zod")},4273:(a,b,c)=>{c.d(b,{x:()=>e});let d=new Map;async function e(a){let b=Date.now(),c=d.get(a);c||(c={lastRefill:b,tokens:5},d.set(a,c));let e=Math.floor((b-c.lastRefill)/1e3);if(e>0&&(c.tokens=Math.min(5,c.tokens+e),c.lastRefill=b),c.tokens>0)return void c.tokens--;throw Error("RATE_LIMIT_EXCEEDED")}},5600:a=>{a.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6330:a=>{a.exports=require("@prisma/client")},9392:(a,b,c)=>{c.a(a,async(a,d)=>{try{c.r(b),c.d(b,{config:()=>o,default:()=>n,handler:()=>m});var e=c(9046),f=c(8667),g=c(3480),h=c(6435),i=c(625),j=c(8112),k=c(8766),l=a([i]);i=(l.then?(await l)():l)[0];let n=(0,h.M)(i,"default"),o=(0,h.M)(i,"config"),p=new g.PagesAPIRouteModule({definition:{kind:f.A.PAGES_API,page:"/api/trade",pathname:"/api/trade",bundlePath:"",filename:""},userland:i,distDir:".next",projectDir:""});async function m(a,b,c){let d=await p.prepare(a,b,{srcPage:"/api/trade"});if(!d){b.statusCode=400,b.end("Bad Request"),null==c.waitUntil||c.waitUntil.call(c,Promise.resolve());return}let{query:f,params:g,prerenderManifest:h}=d;try{let c=a.method||"GET",d=(0,j.getTracer)(),e=d.getActiveScopeSpan(),i=p.instrumentationOnRequestError.bind(p),l=async e=>p.render(a,b,{query:{...f,...g},params:g,allowedRevalidateHeaderKeys:void 0,multiZoneDraftMode:!0,trustHostHeader:void 0,previewProps:h.preview,propagateError:!1,dev:p.isDev,page:"/api/trade",projectDir:"",onError:(...b)=>i(a,...b)}).finally(()=>{if(!e)return;e.setAttributes({"http.status_code":b.statusCode,"next.rsc":!1});let f=d.getRootSpanAttributes();if(!f)return;if(f.get("next.span_type")!==k.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${f.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let g=f.get("next.route");if(g){let a=`${c} ${g}`;e.setAttributes({"next.route":g,"http.route":g,"next.span_name":a}),e.updateName(a)}else e.updateName(`${c} ${a.url}`)});e?await l(e):await d.withPropagatedContext(a.headers,()=>d.trace(k.BaseServerSpan.handleRequest,{spanName:`${c} ${a.url}`,kind:j.SpanKind.SERVER,attributes:{"http.method":c,"http.target":a.url}},l))}catch(a){if(p.isDev)throw a;(0,e.sendError)(b,500,"Internal Server Error")}finally{null==c.waitUntil||c.waitUntil.call(c,Promise.resolve())}}d()}catch(a){d(a)}})},9527:a=>{a.exports=import("ethers")}};var b=require("../../webpack-api-runtime.js");b.C(a);var c=b.X(0,[7169],()=>b(b.s=9392));module.exports=c})();